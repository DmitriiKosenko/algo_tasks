/*

Дан упорядоченный по неубыванию массив целых 32-разрядных чисел. Требуется удалить из него все повторения.
Желательно получить решение, которое не считывает входной файл целиком в память, т.е., использует лишь константный объем памяти в процессе работы.

Формат ввода
Первая строка входного файла содержит единственное число n, n ≤ 1000000.
На следующих n строк расположены числа — элементы массива, по одному на строку. Числа отсортированы по неубыванию.

Формат вывода
Выходной файл должен содержать следующие в порядке возрастания уникальные элементы входного массива.

*/

#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdint>

using namespace std;


int main() {

	int n;
	cin >> n;

	if (n <= 0) {
		return 0;
	}

	vector<int> v;
	v.reserve(n);

	int prev;
	cin >> prev;
	v.push_back(prev);

	for (unsigned int i = 1; i < n; i++) {
		int t;
		cin >> t;

		if (t != prev) {
			v.push_back(t);
			prev = t;
		}
	}

	for (unsigned int i = 0; i < v.size(); i++) {
		cout << v[i] << endl;
	}
	
	return 0;
}